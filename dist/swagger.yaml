openapi: "3.0.0"
info:
  title: Opiniion Webhook Integration API
  version: "1.0.0"
  description: >
    This API endpoint receives webhook requests from the outside world.
    It accepts a customer/resident and related metadata in a JSON payload.
servers:
  - url: "https://appbackend.opiniion.com"
paths:
  /integrations/webhooks/standard:
    post:
      summary: Receive Webhook Data
      description: >
        Receives webhook data in a JSON format. The data will be processed and if valid, dispatched to Opiniion
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/SinglePersonRequest"
                - $ref: "#/components/schemas/MultiplePersonsRequest"
            examples:
              Single Location, Single Person:
                $ref: "#/components/examples/SingleLocationSinglePerson"
              Single Location, Multiple Persons:
                $ref: "#/components/examples/SingleLocationMultiplePerson"
              Multiple Locations, Single Person:
                $ref: "#/components/examples/MultipleLocationSinglePerson"
              Multiple Locations, Multiple Persons:
                $ref: "#/components/examples/MultipleLocationMultiplePerson"
              Arbitrary Filter Included:
                $ref: "#/components/examples/ArbitraryFilterIncluded"

      responses:
        "200":
          description: Webhook data uploaded successfully.
          content:
            application/json:
              schema:
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  errorDescriptions:
                    type: array
                    items:
                      type: string
              examples:
                example1:
                  summary: Integration Records in Opiniion are inactive
                  value:
                    error: "Integration(s) are inactive"
                example2:
                  summary: No customers provided
                  value:
                    error: "No customers provided"
                example3:
                  summary: Missing uid/api key
                  value:
                    error: "Missing Location Id/API Key"
                example4:
                  summary: Upload Failure
                  value:
                    error: "All requests failed | Some requests succeeded"
                    errorDescriptions:
                      - "Opiniion replied with an error. Status: 403 Message: Location not active!"
                      - "Opiniion replied with an error. Status: 502 Message: Bad Gateway"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example1:
                  summary: Internal Server Error
                  value:
                    error: "Failed to initialize upload."

components:
  schemas:
    Person:
      type: object
      properties:
        firstname:
          type: string
          description: Person's first name.
          example: "Mary"
          x-aliases:
            - firstName
        lastname:
          type: string
          description: Person's last name
          example: "Jane"
          x-aliases:
            - lastName
        email:
          type: string
          description: Email address of the person. Not required if [phone](#/components/schemas/Person/phone) is provided
          example: "email@email.com"
        phone:
          type: string
          description: Phone number of the person. Not required if [email](#/components/schemas/Person/email) is provided
          example: "(111) 111-1111"
        countrycode:
          type: string
          description: International country code.
          example: "+1"
          default: "+1"
        notes:
          type: string
          description: Comma-separated notes to associate with the person.
          example: "This is a note,this is a second note"
        tags:
          type: string
          description: Comma-separated tags to associate with the person.
          example: "#201,WOID: 12344"
      required:
        - email
        - phone
    Persons:
      type: "object"
      properties:
        customers:
          type: "array"
          description: >
            An array of persons to upload.<br/><br/>NOTE: All persons in the same request will go to the same location
            even if using [OpiniionLocations](#/components/schemas/OpiniionLocations).<br/><br/>The location can be influenced
            by using a [Filter](#/components/schemas/Filter) but if you want to upload each person to a different location, you'll
            need to send them over individually.
          items:
            $ref: "#/components/schemas/Person"
    OpiniionLocationCredentials:
      type: "object"
      properties:
        uid:
          type: "string"
          description: "Opiniion Location Id"
          example: "B1234"
        api:
          type: "string"
          description: "Opiniion Location API Key"
          example: "6612345"
      required:
        - uid
        - api
    OpiniionLocations:
      type: string
      description: >
        A comma-delimited string where each entry is a colon-separated pair formatted as LocationId:LocationAPIKey.<br/><br/>
        The first element should satisfy the [LocationId](#/components/schemas/LocationId) schema and the second the
        [LocationAPIKey](#/components/schemas/LocationAPIKey) schema.<br/><br/>This is an optional way of including multiple
        locations in one request. This will be used if you're splitting customer/resident data from one location in your system
        to multiple Opiniion locations.<br/><br/>Use with: [Filter](#/components/schemas/Filter) to achieve this behavior
      example: "B1234:6612345,B6789:6612345"
    Filter:
      type: "string"
      description: >
        Used with [OpiniionLocations](#/components/schemas/OpiniionLocations).<br/><br/>If an arbitrary
        <key:value> is included in the request, Opiniion will route the data to ANY location in
        [OpiniionLocations](#/components/schemas/OpiniionLocations) that is configured to that <key:value> pair.<br/><br/>
        If no locations are configured to a specific pair, then no data will be uploaded.<br/><br/>Please reach out to
        Opiniion if you would like to use this feature. By default this is disabled.<br/><br/>Pseudo-Mapping Examples:<br/><br/>
        Persons living in <zipcode:60007> --> B1234:6612345.<br/><br/>
        Persons living in <zipcode:75001> --> B6789:6612345.
    Request:
      type: object
      allOf:
        - oneOf:
            - $ref: "#/components/schemas/OpiniionLocationCredentials"
            - $ref: "#/components/schemas/OpiniionLocations"
      properties:
        status:
          type: string
          description: Status of the person.
          enum: ["active", "inactive"]
          example: "active"
          default: "active"
        source:
          type: string
          description: The origin system for the data (e.g., CRM).
          example: "CRM"
          default: "import"
    SinglePersonRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/Person"
    MultiplePersonsRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/Persons"
  examples:
    SingleLocationSinglePerson:
      value:
        uid: "B1234"
        api: "6612345"
        status: "active"
        source: "CRM"
        firstname: "Mary"
        lastname: "Jane"
        email: "email@email.com"
        phone: "(111) 111-1111"
        countrycode: "+1"
        notes: "This is a note,this is a second note"
        tags: "#201,WOID: 12344"

    SingleLocationMultiplePerson:
      value:
        uid: "B1234"
        api: "6612345"
        status: "active"
        source: "CRM"
        customers:
          - firstname: "Mary"
            lastname: "Jane"
            email: "email@email.com"
            phone: "(111) 111-1111"
            countrycode: "+1"
            notes: "This is a note,this is a second note"
            tags: "#201,WOID: 12344"

          - firstname: "Jack"
            lastname: "Smith"
            email: "email1@email.com"
            phone: "(222) 222-2222"
            countrycode: "+1"
            notes: "This is a note"
            tags: "#201"

    MultipleLocationSinglePerson:
      value:
        opinlocations: "B1234:6612345,B6789:6612345"
        status: "active"
        source: "CRM"
        firstname: "Mary"
        lastname: "Jane"
        email: "email@email.com"
        phone: "(111) 111-1111"
        countrycode: "+1"
        notes: "This is a note,this is a second note"
        tags: "#201,WOID: 12344"

    MultipleLocationMultiplePerson:
      value:
        opinlocations: "B1234:6612345,B6789:6612345"
        status: "active"
        source: "CRM"
        customers:
          - firstname: "Mary"
            lastname: "Jane"
            email: "email@email.com"
            phone: "(111) 111-1111"
            countrycode: "+1"
            notes: "This is a note,this is a second note"
            tags: "#201,WOID: 12344"

          - firstname: "Jack"
            lastname: "Smith"
            email: "email1@email.com"
            phone: "(222) 222-2222"
            countrycode: "+1"
            notes: "This is a note"
            tags: "#201"
    ArbitraryFilterIncluded:
      value:
        opinlocations: "B1234:6612345,B6789:6612345"
        status: "active"
        source: "CRM"
        firstname: "Mary"
        lastname: "Jane"
        email: "email@email.com"
        phone: "(111) 111-1111"
        countrycode: "+1"
        notes: "This is a note,this is a second note"
        tags: "#201,WOID: 12344"
        zipcode: "60007"
